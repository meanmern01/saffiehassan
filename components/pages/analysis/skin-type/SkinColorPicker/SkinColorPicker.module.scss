@import '../../../../../css/base/variables';
@import '../../../../../css/utils/mixins';

.container {
    --size: 90px;
    display: grid;
    grid-gap: calc(var(--size) / 2.5);
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    transform: rotate(45deg);

    @media screen and (max-width: 1366px) {
        --size: 62px;
    }

    @media screen and (max-width: 1024px) {
        --size: 51px;
    }
}

.chosen {
    width: var(--size);
    height: var(--size);
    grid-column: 2 / span 1;
    grid-row: 2 / span 1;
    font-size: 14px;
    text-transform: uppercase;
    font-weight: 600;
    letter-spacing: -0.02em;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    z-index: 2;
    text-align: center;

    &::before {
        content: '';
        width: var(--size);
        height: var(--size);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(1.35);
        border: 1px solid $light-gray;
        background-color: $body-bg;

        @include vertical-tablet {
            background-color: #fff;
        }

        @include mobile {
            background-color: $body-bg;
        }
    }
}

.chosen-text {
    transform: rotate(-45deg);
}

.button-wrapper {
    position: relative;
    transform: rotate(-45deg);

    &:nth-child(2) {
        grid-column: 1 / span 1;
        grid-row: 3 / span 1;
    }

    &:nth-child(3) {
        grid-column: 1 / span 1;
        grid-row: 2 / span 1;
    }

    &:nth-child(4) {
        grid-column: 2 / span 1;
        grid-row: 3 / span 1;
    }

    &:nth-child(5) {
        grid-column: 2 / span 1;
        grid-row: 1 / span 1;
    }

    &:nth-child(6) {
        grid-column: 3 / span 1;
        grid-row: 1 / span 1;
    }

    &:nth-child(7) {
        grid-column: 3 / span 1;
        grid-row: 2 / span 1;
    }
}

.button {
    width: var(--size);
    height: var(--size);
    position: relative;
    transform: rotate(45deg);

    &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 100%;
        height: 100%;
        transform: translate(-50%, -50%) scale(1.35);
        border: 1px solid transparent;
        transition: border-color 0.2s ease, background-color 0.2s ease;
        pointer-events: none;
    }

    &.active {
        &::after {
            background-color: $dark;
        }
    }

    @include hover {
        &::after {
            border-color: $dark;
        }
    }
}

.el {
    position: relative;
    z-index: 1;
    background-color: $light-gray;
    display: inline-block;
    width: inherit;
    height: inherit;
}

.tooltip-top {
    padding: 6px 16px 2px;
    text-transform: uppercase;
    border-bottom: 1px solid var(--tooltip-color);
}

.tooltip-content {
    padding: 14px 16px;
}
