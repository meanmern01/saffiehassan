@import '../../../css/base/variables';
@import '../../../css/utils/mixins';

.btn {
    --bg-color-default: transparent;
    --bg-color-hover: var(--bg-color-default);
    --bg-color-active: var(--bg-color-hover);
    --bg-color-disabled: #c1c2c3;
    --bg-color: var(--bg-color-default);

    --border-color-default: var(--bg-color);
    --border-color-hover: var(--border-color-default);
    --border-color-active: var(--border-color-hover);
    --border-color-disabled: var(--border-color-default);
    --border-color: var(--border-color-default);

    --color-default: #{$body-color};
    --color-hover: var(--color-default);
    --color-active: var(--color-hover);
    --color-disabled: #{$gray};
    --color: var(--color-default);

    --outline-color: #{$dark};

    --padding-x: 16px;
    --padding-y: 8px;

    --height: calc(1.6em + var(--padding-y) * 2);

    display: inline-block;
    text-align: center;
    color: var(--color);
    background-color: var(--bg-color);
    border: 1px solid var(--border-color);
    border-radius: 0;
    height: var(--height);
    padding: var(--padding-y) var(--padding-x);
    cursor: pointer;
    text-decoration: none;
    flex-shrink: 0;
    transition: color 0.2s ease, border-color 0.2s ease, background-color 0.2s ease;
    position: relative;
    overflow: hidden;
    overflow: clip;

    @include mobile {
        --padidng-x: 12px;
        --height: calc(1.556em + var(--padding-y) * 2);
    }

    @include hover {
        --color: var(--color-hover);
        --bg-color: var(--bg-color-hover);
        --border-color: var(--border-color-hover);

        &::after {
            transform: translate3d(-50%, -50%, 0);
        }

        .btn-inner {
            transform: translate3d(0, calc(-1 * var(--height)), 0);
        }
    }

    &:hover,
    &:active {
        color: var(--color);
    }

    &:not(:disabled):active {
        --color: var(--color-active);
        --bg-color: var(--bg-color-active);
        --border-color: var(--border-color-active);
    }

    &:focus-visible {
        outline: 1px solid var(--outline-color);
        outline-offset: 3px;
    }

    &:disabled {
        --color: var(--color-disabled);
        --bg-color: var(--bg-color-disabled);
        --border-color: var(--border-color-disabled);
        cursor: not-allowed;
    }

    :global(.loader) {
        --loader-size: 40px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    &::after {
        content: attr(data-hover);
        position: absolute;
        display: inline-block;
        width: 100%;
        top: 50%;
        left: 50%;
        transform: translate3d(-50%, -50%, 0) translate3d(0, var(--height), 0);
        z-index: 1;
        transition: transform 0.3s $app-easing;
    }

    &.uppercase {
        text-transform: uppercase;
    }
}

.btn-inner {
    transition: transform 0.3s $app-easing;
    display: inline-block;
}

.btn-dark {
    --color-default: #{$light};

    --bg-color-default: #{$dark};
    --bg-color-hover: #{lighten($dark, 8%)};
    --bg-color-active: #{lighten($dark, 10%)};
}

.btn-outline-dark {
    --color-default: #{$dark};
    --color-hover: #{$light};

    --bg-color-default: transparent;
    --bg-color-hover: #{$dark};
    --bg-color-active: #{$dark};

    --border-color-default: #{$dark};
}

.btn-geometry-wide {
    width: 100%;
}

.btn-sm {
    --padding-x: 8px;
    --padding-y: 3px;
    font-size: 12px;
}
